source("scripts/api_keys.R")
source("scripts/summary_info.R")
setwd("C:/Users/Ally/Desktop/music-tastes-info201a")
source("scripts/summary_info.R")
source("scripts/api_keys.R")
source("scripts/summary_info.R")
source("summary_info.R")
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/summary_info.R")
setwd("C:/Users/Ally/Desktop/music-tastes-info201a")
setwd("~/INFO 201")
library("spotifyr")
library("tidyverse")
library("dplyr")
source("api_keys.R")
source("summary_data_frame.R")
source('C:/Users/Ally/Desktop/music-tastes-info201a/scripts/summary.R')
setwd("C:/Users/Ally/Desktop/music-tastes-info201a/scripts")
source('C:/Users/Ally/Desktop/music-tastes-info201a/scripts/summary.R')
source("scripts/summary.R")
source("api_keys.R")
Sys.setenv(SPOTIFY_CLIENT_ID = id_api_key)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret_api_key)
# Pull Access Token into R
access_token <- get_spotify_access_token()
get_summary_info <- function(dataframe) {
songs <- list()
# What is the name of the most popular song?
songs$most_popular_song <- songs_dataframe %>%
filter(popularity == max(popularity)) %>%
pull(name)
# What year had the most popular ratings on average?
songs$year_most_popular <- songs_dataframe %>%
group_by(release_year) %>%
summarize(popularity = mean(popularity)) %>%
arrange(-popularity) %>%
head(1) %>%
pull(release_year)
# Which genre has the most songs with explicit lyrics?
songs$most_explicit_genre <- songs_dataframe %>%
group_by(genre) %>%
filter(explicit == "TRUE") %>%
count() %>%
arrange(-n) %>%
head(1) %>%
pull(genre)
return (songs)
}
View(get_summary_info(songs_dataframe))
# Set up and source
library("spotifyr")
library("tidyverse")
library("knitr")
library("dplyr")
source("music-tastes-201a/api_keys.R")
# Set up and source
library("spotifyr")
library("dplyr")
source("music-tastes-info201a/api_keys.R")
source("/music-tastes-info201a/api_keys.R")
setwd("~/Desktop/INFO201/music-tastes-info201a/scripts")
source("/music-tastes-info201a/api_keys.R")
source("..api_keys.R")
source("../api_keys.R")
source("api_keys.R")
source("api_keys.R")
# Set up and source
library("spotifyr")
library("dplyr")
source("api_keys.R")
# Authentication
Sys.setenv(SPOTIFY_CLIENT_ID = id_api_key)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret_api_key)
# Pull Access Token into R
access_token <- get_spotify_access_token()
# Creation of data frame from Spotify API --------------------------------------
# For each the genre following steps apply:
# (1) Use `get_recommendations()` to obtain 100 songs of the genre and store in
# `"genre"_songs` data frame.
# (2) Store the song features in another using `get_track_audio_feature()` by
# the id in the `"genre"_songs`` data frame.
# (3) Merge the two dataframes together into the `"genre"_songs` data frame by
# `id`
# Jazz songs
jazz_songs <- get_recommendations(limit = 100,
seed_genres = "jazz") %>%
mutate(genre = "jazz") %>%
select(genre, name, id)
jazz_song_features <-  get_track_audio_features(jazz_songs$id)
jazz_songs <- merge(jazz_songs, jazz_song_features, by = "id")
# Rock Songs
rock_songs <- get_recommendations(limit = 100,
seed_genres = "rock") %>%
mutate(genre = "rock") %>%
select(genre, name, id)
rock_songs_features <- get_track_audio_features(rock_songs$id)
rock_songs <- merge(rock_songs, rock_songs_features, by = "id")
# Pop Songs
pop_songs <- get_recommendations(limit = 100,
seed_genres = "pop") %>%
mutate(genre = "pop") %>%
select(genre, name, id)
pop_songs_features <- get_track_audio_features(pop_songs$id)
pop_songs <- merge(pop_songs, pop_songs_features, by = "id")
# Hip Hop Songs
hip_hop_songs <- get_recommendations(limit = 100,
seed_genres = "hip-hop") %>%
mutate(genre = "hip-hop") %>%
select(genre, name, id)
hip_hop_songs_features <- get_track_audio_features(hip_hop_songs$id)
hip_hop_songs <- merge(hip_hop_songs, hip_hop_songs_features, by = "id")
# Country Songs
country_songs <- get_recommendations(limit = 100,
seed_genres = "country") %>%
mutate(genre = "country") %>%
select(genre, name, id)
country_songs_features <- get_track_audio_features(country_songs$id)
country_songs <- merge(country_songs, country_songs_features, by = "id")
# Classical Songs
classical_songs <- get_recommendations(limit = 100,
seed_genres = "classical") %>%
mutate(genre = "classical") %>%
select(genre, name, id)
classical_songs_features <- get_track_audio_features(classical_songs$id)
classical_songs <- merge(classical_songs, classical_songs_features, by = "id")
# Metal Songs
metal_songs <- get_recommendations(limit = 100,
seed_genres = "metal") %>%
mutate(genre = "metal") %>%
select(genre, name, id)
metal_songs_features <- get_track_audio_features(metal_songs$id)
metal_songs <- merge(metal_songs, metal_songs_features, by = "id")
# Final Data frame for use -----------------------------------------------------
# Combine all the "genre"_songs data frames using `rbind`
songs_df <- rbind(jazz_songs, rock_songs, pop_songs, hip_hop_songs,
country_songs, classical_songs, metal_songs)
library("dplyr")
library("ggplot2")
source("summary_data_frame.R")
# Bar Chart -------------------------------------------------------------------
genre_bar_chart <- songs_df %>%
ggplot() +
# Create bar chart with genre on the y axis and valence on the x axis
# Order the valence from greatest to least
geom_bar(aes(x = reorder(genre, valence), y = valence),
stat = "summary", fun.y = "mean", # take the mean of the valence for
# each genre
fill = "#00CCCC") +
coord_flip() + # Horizontal bar chart
# title/axis labels
ggtitle("Average Valence per Genre
(based off Spotify list of 100 recommendations by genre)") +
xlab("Genre") +
ylab("Average Valence") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
genre_bar_chart
get_summary_info <- function(dataset) {
ret <- list()
ret$length <- length(dataset) # number of columns
ret$num_obs <- nrow(dataset) # number of rows
ret$col_names <- colnames(dataset) # column names
ret$genres <- unique(dataset$genre) # the different genres
# number of observations of each unique genres
ret$num_of_genres <- table(dataset$genre)
return(ret)
}
get_summary_info(songs_df)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("api_keys.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("scripts/table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("scripts/table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("scripts/table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
#source("scripts/table.R")
source("scripts/summary.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
#source("scripts/table.R")
source("scripts/summary.R")
setwd("~/Desktop/INFO201/music-tastes-info201a")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("scripts/table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("scripts/table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
#source("scripts/table.R")
#source("scripts/summary.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("scripts/table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("scripts/table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
#source("scripts/table.R")
source("scripts/summary_info.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("/scripts/table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("scripts/table.R")
setwd("~/Desktop/INFO201/music-tastes-info201a")
source("/scripts/table.R")
getwd()
source("/Users/juliakoh/Desktop/INFO201/music-tastes-info201a/scripts/table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("scripts/table1.R")
source("scripts/api_keys.R")
source("scripts/table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("scripts/table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("table.R")
setwd("~/Desktop/INFO201/music-tastes-info201a")
source("/scripts")
source("/scripts/table.R")
source("/scripts/api_keys.R")
source("scripts/api_keys.R")
source("scripts/table.R")
source("scripts/bar_chart.R")
source("scripts/bar_chart.R")
genre_bar_chart <- songs_df %>%
ggplot() +
# Create bar chart with genre on the y axis and valence on the x axis
# Order the valence from greatest to least
geom_bar(aes(x = reorder(genre, valence), y = valence),
stat = "summary", fun.y = "mean", # take the mean of the valence for
# each genre
fill = "#00CCCC") +
coord_flip() + # Horizontal bar chart
# title/axis labels
ggtitle("Average Valence per Genre
(based off Spotify list of 100 recommendations by genre)") +
xlab("Genre") +
ylab("Average Valence") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
genre_bar_chart <- songs_df %>%
ggplot() +
# Create bar chart with genre on the y axis and valence on the x axis
# Order the valence from greatest to least
geom_bar(aes(x = reorder(genre, valence), y = valence),
stat = "summary", fun.y = "mean", # take the mean of the valence for
# each genre
fill = "#00CCCC") +
coord_flip() + # Horizontal bar chart
# title/axis labels
ggtitle("Average Valence per Genre
(based off Spotify list of 100 recommendations by genre)") +
xlab("Genre") +
ylab("Average Valence") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
source("scripts/bar_chart.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library("ggplot2")
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("scripts/summary_data_frame.R")
source("scripts/table.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library("ggplot2")
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("scripts/summary_data_frame.R")
#source("scripts/table.R")
source("scripts/summary_info.R")
source("scripts/bar_chart.R")
get_summary_info(songs_df)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library("ggplot2")
library(knitr)
library(spotifyr)
source("scripts/api_keys.R")
source("scripts/summary_data_frame.R")
#source("scripts/table.R")
source("scripts/summary_info.R")
source("scripts/bar_chart.R")
get_summary_info(songs_df)
get_summary_info(songs_df)
col_names <- get_summary_info(songs_df)$col_names
col_names
length <- get_summary_info(songs_df)$length
num_obs <- get_summary_info(songs$df)$num_obs
length <- get_summary_info(songs_df)$length
num_obs <- get_summary_info(songs_df)$num_obs
col_names <- get_summary_info(songs_df)$col_names
genre_types <- get_summary_info(songs_df)$genres
num_of_genres <- get_summary_info(songs_df)$num_of_genres
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library("ggplot2")
library(knitr)
library(spotifyr)
library(knitr)
source("scripts/api_keys.R")
source("scripts/summary_data_frame.R")
#source("scripts/table.R")
source("scripts/summary_info.R")
source("scripts/bar_chart.R")
length <- get_summary_info(songs_df)$length
num_obs <- get_summary_info(songs_df)$num_obs
col_names <- get_summary_info(songs_df)$col_names
genre_types <- get_summary_info(songs_df)$genres
num_of_genres <- get_summary_info(songs_df)$num_of_genres
knitr::opts_chunk$set(echo = TRUE)
library("dplyr"")
library("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
library("spotifyr")
library("knitr"")
source("scripts/api_keys.R")
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
library("spotifyr")
library("knitr")
source("scripts/api_keys.R")
source("scripts/summary_data_frame.R")
source("scripts/summary_info.R")
source("scripts/bar_chart.R")
length <- get_summary_info(songs_df)$length
num_obs <- get_summary_info(songs_df)$num_obs
col_names <- get_summary_info(songs_df)$col_names
genre_types <- get_summary_info(songs_df)$genres
num_of_genres <- get_summary_info(songs_df)$num_of_genres
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
library("spotifyr")
library("knitr")
source("scripts/api_keys.R")
#source("scripts/summary_data_frame.R")
source("scripts/summary_info.R")
source("scripts/bar_chart.R")
#length <- get_summary_info(songs_df)$length
#num_obs <- get_summary_info(songs_df)$num_obs
#col_names <- get_summary_info(songs_df)$col_names
#genre_types <- get_summary_info(songs_df)$genres
#num_of_genres <- get_summary_info(songs_df)$num_of_genres
#summary_table <- get_table_info(songs_df)
#kable(summary_table)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
library("spotifyr")
library("knitr")
source("scripts/api_keys.R")
#source("scripts/summary_data_frame.R")
source("scripts/summary_info.R")
source("scripts/bar_chart.R")
#length <- get_summary_info(songs_df)$length
#num_obs <- get_summary_info(songs_df)$num_obs
#col_names <- get_summary_info(songs_df)$col_names
#genre_types <- get_summary_info(songs_df)$genres
#num_of_genres <- get_summary_info(songs_df)$num_of_genres
#summary_table <- get_table_info(songs_df)
#kable(summary_table)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
library("spotifyr")
library("knitr")
source("scripts/api_keys.R")
source("scripts/summary_data_frame.R")
source("scripts/summary_info.R")
source("scripts/bar_chart.R")
#length <- get_summary_info(songs_df)$length
#num_obs <- get_summary_info(songs_df)$num_obs
#col_names <- get_summary_info(songs_df)$col_names
#genre_types <- get_summary_info(songs_df)$genres
#num_of_genres <- get_summary_info(songs_df)$num_of_genres
#summary_table <- get_table_info(songs_df)
#kable(summary_table)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
library("spotifyr")
library("knitr")
source("scripts/api_keys.R")
# source("scripts/summary_data_frame.R")
source("scripts/summary_info.R")
source("scripts/bar_chart.R")
#length <- get_summary_info(songs_df)$length
#num_obs <- get_summary_info(songs_df)$num_obs
#col_names <- get_summary_info(songs_df)$col_names
#genre_types <- get_summary_info(songs_df)$genres
#num_of_genres <- get_summary_info(songs_df)$num_of_genres
#summary_table <- get_table_info(songs_df)
#kable(summary_table)
get_summary_info <- function(dataset) {
ret <- list()
ret$length <- length(dataset) # number of columns
ret$num_obs <- nrow(dataset) # number of rows
ret$col_names <- colnames(dataset) # column names
ret$genres <- unique(dataset$genre) # the different genres
# number of observations of each unique genres
ret$num_of_genres <- table(dataset$genre)
return(ret)
}
get_summary_info(songs_df)$genres
print(get_summary_info(songs_df)$genres)
typeof(get_summary_info(songs_df)$num_of_each_genre)
get_summary_info <- function(dataset) {
ret <- list()
ret$length <- length(dataset) # number of columns
ret$num_obs <- nrow(dataset) # number of rows
ret$col_names <- colnames(dataset) # column names
ret$genres <- unique(dataset$genre) # the different genres
# number of observations of each unique genres
ret$num_of_each_genre <- table(dataset$genre)
return(ret)
}
get_summary_info(songs_df)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("ggplot2")
library("spotifyr")
library("knitr")
source("scripts/api_keys.R")
#source("scripts/table")
source("scripts/summary_data_frame.R")
source("scripts/summary_info.R")
source("scripts/bar_chart.R")
genre_bar_chart
