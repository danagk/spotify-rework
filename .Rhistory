# This is my first comment (today)
install.packages(carData)
install.packages("carData")
library(carData)
View(Florida)
Florida[Florida$GORE > Florida$BUSH,]
nrow(Florida[,Florida$GORE > Florida$BUSH])
nrow(Florida[,Florida$GORE > Florida$BUSH])
nrow(Florida[Florida$GORE > Florida$BUSH,])
nrow(Florida[GORE > BUSH,])
nrow(Florida[GORE > BUSH,])
Florida[Florida$GORE > Florida$BUSH,]
nrow(Florida[Florida$GORE > Florida$BUSH,])
(Florida[Florida$GORE > Florida$BUSH,])
(Florida$NADER[Florida$GORE > Florida$BUSH,])
NADER[Florida$GORE > Florida$BUSH,]
Florida$NADER[Florida$GORE > Florida$BUSH,]
(Florida[Florida$GORE > Florida$BUSH,])
rownames(Florida$Total[Florida$Total == max(Florida$Total),])
rownames(Florida[Florida$Total == max(Florida$Total),])
rownames(Florida[Florida$Total == min(Florida$Total),])
rownames(Florida[Florida$Total = max(Florida$Total),])
Florida[Florida$GORE > Florida$BUSH, NADER]
Florida[Florida$GORE > Florida$BUSH, "NADER"]
sum(Florida[Florida$GORE > Florida$BUSH, "NADER"])
View(Florida[Florida$GORE > Florida$BUSH, "NADER"])
View(Florida[Florida$GORE > Florida$BUSH,])
library("dplyr")
library("ggmap")
library("ggplot2")
# Load data from GitHub
permit_data <- read.csv(
"https://raw.githubusercontent.com/programming-for-data-science/in-action/master/interactive-vis/data/Building_Permits.csv",
stringsAsFactors = F)
library("dplyr")
library("ggmap")
library("ggplot2")
# Load data from GitHub
permit_data <- read.csv(
"https://raw.githubusercontent.com/programming-for-data-science/in-action/master/interactive-vis/data/Building_Permits.csv",
stringsAsFactors = F)
library("dplyr")
library("ggmap")
library("ggplot2")
install.packages("ggmap")
library("dplyr")
library("ggmap")
library("ggplot2")
permit_data <- read.csv(
"https://raw.githubusercontent.com/programming-for-data-science/in-action/master/interactive-vis/data/Building_Permits.csv",
stringsAsFactors = F)
library(httr)
library(jsonlite)
api_call <- "https://api.propublica.org/congress/v1/{congress}/{chamber}/bills/{type}.json"
resource <-"bills"
endpoint <- paste0(api_call, "115", "/house/", resource, "/introduced.json")
response <- GET(endpoint, add_headers("X-API-KEY" = "ZyrCa0uJtBPmjDeWfW8otsjG23Jm532Pt5MvxFHq"))
body <- content(response, "text")
results <- fromJSON(body)
source('~/INFO 201/summary.R')
setwd("~/INFO 201")
source('~/INFO 201/summary.R')
library("spotifyr")
library("tidyverse")
library("knitr")
library("dplyr")
source("api_key.R")
source("summary_data_frame.R")
source("api_key.R")
source("summary_data_frame.R")
# Authentication
Sys.setenv(SPOTIFY_CLIENT_ID = id_api_key)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret_api_key)
# Pull Access Token into R
access_token <- get_spotify_access_token()
get_summary_info <- function(dataframe) {
songs <- list()
# What is the name of the most popular song?
songs$most_popular_song <- songs_dataframe %>%
filter(popularity == max(popularity)) %>%
pull(name)
# What year had the most popular ratings on average?
songs$year_most_popular <- songs_dataframe %>%
group_by(release_year) %>%
summarize(popularity = mean(popularity)) %>%
arrange(-popularity) %>%
head(1) %>%
pull(release_year)
# Which genre has the most songs with explicit lyrics?
songs$most_explicit_genre <- songs_dataframe %>%
group_by(genre) %>%
filter(explicit == "TRUE") %>%
count() %>%
arrange(-n) %>%
head(1) %>%
pull(genre)
return (songs)
}
jazz_songs1 <- get_recommendations(limit = 100,
seed_genres = "jazz") %>%
mutate(genre = "jazz") %>%
select(genre, name, id, popularity)
jazz_song_features1 = get_track_audio_features(jazz_songs1$id)
jazz_songs1 <- merge(jazz_songs1, jazz_song_features1, by = "id")
# Rock
rock_songs1 <- get_recommendations(limit = 100,
seed_genres = "rock") %>%
mutate(genre = "rock") %>%
select(genre, name, id, popularity, popularity)
rock_songs_features1 = get_track_audio_features(rock_songs1$id)
rock_songs1 <- merge(rock_songs1, rock_songs_features1, by = "id")
#Pop
pop_songs1 <- get_recommendations(limit = 100,
seed_genres = "pop") %>%
mutate(genre = "pop") %>%
select(genre, name, id, popularity)
pop_songs_features1 <- get_track_audio_features(pop_songs1$id)
pop_songs1 <- merge(pop_songs1, pop_songs_features1, by = "id")
#Hip Hop
hip_hop_songs1 <- get_recommendations(limit = 100,
seed_genres = "hip-hop") %>%
mutate(genre = "hip-hop") %>%
select(genre, name, id, popularity)
hip_hop_songs_features1 <- get_track_audio_features(hip_hop_songs1$id)
hip_hop_songs1 <- merge(hip_hop_songs1, hip_hop_songs_features1, by = "id")
# Country
country_songs1 <- get_recommendations(limit = 100,
seed_genres = "country") %>%
mutate(genre = "country") %>%
select(genre, name, id, popularity)
country_songs_features1 <- get_track_audio_features(country_songs1$id)
country_songs1 <- merge(country_songs1, country_songs_features1, by = "id")
# Classical
classical_songs1 <- get_recommendations(limit = 100,
seed_genres = "classical") %>%
mutate(genre = "classical") %>%
select(genre, name, id, popularity)
classical_songs_features1 <- get_track_audio_features(classical_songs1$id)
classical_songs1 <- merge(classical_songs1, classical_songs_features1, by = "id")
# Metal
metal_songs1 <- get_recommendations(limit = 100,
seed_genres = "metal") %>%
mutate(genre = "metal") %>%
select(genre, name, id, popularity)
metal_songs_features1 <- get_track_audio_features(metal_songs1$id)
metal_songs1 <- merge(metal_songs1, metal_songs_features1, by = "id")
# Bind data
songs_df <- rbind(jazz_songs1, rock_songs1, pop_songs1, hip_hop_songs1,
country_songs1, classical_songs1, metal_songs1)
jazz_songs <- get_recommendations(limit = 100,
seed_genres = "jazz") %>%
mutate(genre = "jazz") %>%
transform(release_year = substring(album.release_date, 1, 4)) %>%
select(genre, name, id, popularity, explicit, release_year)
jazz_song_features = get_track_audio_features(jazz_songs$id)
jazz_songs <- merge(jazz_songs, jazz_song_features, by = "id")
# Rock
rock_songs <- get_recommendations(limit = 100,
seed_genres = "rock") %>%
mutate(genre = "rock") %>%
transform(release_year = substring(album.release_date, 1, 4)) %>%
select(genre, name, id, popularity, explicit, release_year)
rock_songs_features = get_track_audio_features(rock_songs$id)
rock_songs <- merge(rock_songs, rock_songs_features, by = "id")
#Pop
pop_songs <- get_recommendations(limit = 100,
seed_genres = "pop") %>%
mutate(genre = "pop") %>%
transform(release_year = substring(album.release_date, 1, 4)) %>%
select(genre, name, id, popularity, explicit, release_year)
pop_songs_features <- get_track_audio_features(pop_songs$id)
pop_songs <- merge(pop_songs, pop_songs_features, by = "id")
#Hip Hop
hip_hop_songs <- get_recommendations(limit = 100,
seed_genres = "hip-hop") %>%
mutate(genre = "hip-hop") %>%
transform(release_year = substring(album.release_date, 1, 4)) %>%
select(genre, name, id, popularity, explicit, release_year)
hip_hop_songs_features <- get_track_audio_features(hip_hop_songs$id)
hip_hop_songs <- merge(hip_hop_songs, hip_hop_songs_features, by = "id")
# Country
country_songs <- get_recommendations(limit = 100,
seed_genres = "country") %>%
mutate(genre = "country") %>%
transform(release_year = substring(album.release_date, 1, 4)) %>%
select(genre, name, id, popularity, explicit, release_year)
country_songs_features <- get_track_audio_features(country_songs$id)
country_songs <- merge(country_songs, country_songs_features, by = "id")
# Classical
classical_songs <- get_recommendations(limit = 100,
seed_genres = "classical") %>%
mutate(genre = "classical") %>%
transform(release_year = substring(album.release_date, 1, 4)) %>%
select(genre, name, id, popularity, explicit, release_year)
classical_songs_features <- get_track_audio_features(classical_songs$id)
classical_songs <- merge(classical_songs, classical_songs_features, by = "id")
# Metal
metal_songs <- get_recommendations(limit = 100,
seed_genres = "metal") %>%
mutate(genre = "metal") %>%
transform(release_year = substring(album.release_date, 1, 4)) %>%
select(genre, name, id, popularity, explicit, release_year)
metal_songs_features <- get_track_audio_features(metal_songs$id)
metal_songs <- merge(metal_songs, metal_songs_features, by = "id")
# Bind data
songs_dataframe <- rbind(jazz_songs, rock_songs, pop_songs, hip_hop_songs,
country_songs, classical_songs, metal_songs)
library("spotifyr")
library("tidyverse")
library("knitr")
library("dplyr")
source("api_key.R")
source("summary_data_frame.R")
Sys.setenv(SPOTIFY_CLIENT_ID = id_api_key)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret_api_key)
# Pull Access Token into R
access_token <- get_spotify_access_token()
get_summary_info <- function(dataframe) {
songs <- list()
# What is the name of the most popular song?
songs$most_popular_song <- songs_dataframe %>%
filter(popularity == max(popularity)) %>%
pull(name)
# What year had the most popular ratings on average?
songs$year_most_popular <- songs_dataframe %>%
group_by(release_year) %>%
summarize(popularity = mean(popularity)) %>%
arrange(-popularity) %>%
head(1) %>%
pull(release_year)
# Which genre has the most songs with explicit lyrics?
songs$most_explicit_genre <- songs_dataframe %>%
group_by(genre) %>%
filter(explicit == "TRUE") %>%
count() %>%
arrange(-n) %>%
head(1) %>%
pull(genre)
return (songs)
}
library("spotifyr")
library("tidyverse")
library("knitr")
library("dplyr")
source("api_key.R")
source("table_data_frame.R")
Sys.setenv(SPOTIFY_CLIENT_ID = id_api_key)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret_api_key)
# Pull Access Token into R
access_token <- get_spotify_access_token()
get_table_info <- function(df) {
songs_table <- songs_df %>%
group_by(genre) %>%
summarize(mean_danceability = round(mean(danceability), 2),
mean_energy = round(mean(energy), 2),
mean_loudness = round(mean(loudness), 2),
mean_acousticness = round(mean(acousticness), 2),
mean_tempo = round(mean(tempo), 2),
popularity = max(popularity)) %>%
arrange(-popularity)
songs_table <- rename(songs_table, "Genre" = genre)
songs_table <- rename(songs_table, "Average Danceability" = mean_danceability)
songs_table <- rename(songs_table, "Average Energy" = mean_energy)
songs_table <- rename(songs_table, "Average Loudness" = mean_loudness)
songs_table <- rename(songs_table, "Average Acousticness" = mean_acousticness)
songs_table <- rename(songs_table, "Average Tempo" = mean_tempo)
songs_table <- rename(songs_table, "Popularity Rating" = popularity)
return(songs_table)
}
dance <- songs_df %>%
group_by(genre) %>%
summarize(danceability = round(mean(danceability), 2)) %>%
arrange(-danceability) %>%
head(1) %>%
pull(genre)
dance <- songs_df %>%
group_by(genre) %>%
summarize(danceability = round(mean(danceability), 2)) %>%
arrange(-danceability) %>%
head(1) %>%
transform(Genre = sub("(.)", "\\U\\1", genre, perl=TRUE)) %>%
pull(genre)
dance
dance <- songs_df %>%
group_by(genre) %>%
summarize(danceability = round(mean(danceability), 2)) %>%
arrange(-danceability) %>%
head(1) %>%
mutate(genre = sub("(.)", "\\U\\1", genre, perl=TRUE)) %>%
pull(genre)
View(dance)
popular <- songs_df %>%
group_by(genre) %>%
summarize(popularity = max(popularity)) %>%
arrange(-popularity) %>%
head(1) %>%
mutate(genre = sub("(.)", "\\U\\1", genre, perl=TRUE)) %>%
pull(genre)
popular
tempo <- songs_df %>%
group_by(genre) %>%
summarize(tempo = round(mean(tempo), 2)) %>%
arrange(-tempo) %>%
head(1) %>%
mutate(genre = sub("(.)", "\\U\\1", genre, perl=TRUE)) %>%
pull(genre)
tempo
loud <- songs_df %>%
group_by(genre) %>%
summarize(loudness = round(mean(loudness), 2)) %>%
arrange(-loudness) %>%
head(1) %>%
mutate(genre = sub("(.)", "\\U\\1", genre, perl=TRUE)) %>%
pull(genre)
energy <- songs_df %>%
group_by(genre) %>%
summarize(energy = round(mean(energy), 2)) %>%
arrange(-energy) %>%
head(1) %>%
mutate(genre = sub("(.)", "\\U\\1", genre, perl=TRUE)) %>%
pull(genre)
acoustic <- songs_df %>%
group_by(genre) %>%
summarize(acousticness = round(mean(acousticness), 2)) %>%
arrange(-acousticness) %>%
head(1) %>%
mutate(genre = sub("(.)", "\\U\\1", genre, perl=TRUE)) %>%
pull(genre)
get_table_info <- function(df) {
songs_table <- songs_df %>%
group_by(genre) %>%
summarize(mean_danceability = round(mean(danceability), 2),
mean_energy = round(mean(energy), 2),
mean_loudness = round(mean(loudness), 2),
mean_acousticness = round(mean(acousticness), 2),
mean_tempo = round(mean(tempo), 2),
mean_popularity = mean(popularity)) %>%
arrange(-popularity)
songs_table <- rename(songs_table, "Genre" = genre)
songs_table <- rename(songs_table, "Average Danceability" = mean_danceability)
songs_table <- rename(songs_table, "Average Energy" = mean_energy)
songs_table <- rename(songs_table, "Average Loudness" = mean_loudness)
songs_table <- rename(songs_table, "Average Acousticness" = mean_acousticness)
songs_table <- rename(songs_table, "Average Tempo" = mean_tempo)
songs_table <- rename(songs_table, "Popularity Rating" = popularity)
return(songs_table)
}
View(get_table_info(songs_df))
View(songs_df)
get_table_info <- function(df) {
songs_table <- songs_df %>%
group_by(genre) %>%
summarize(mean_danceability = round(mean(danceability), 2),
mean_energy = round(mean(energy), 2),
mean_loudness = round(mean(loudness), 2),
mean_acousticness = round(mean(acousticness), 2),
mean_tempo = round(mean(tempo), 2),
mean_popularity = mean(popularity)) %>%
arrange(-mean_popularity)
songs_table <- rename(songs_table, "Genre" = genre)
songs_table <- rename(songs_table, "Average Danceability" = mean_danceability)
songs_table <- rename(songs_table, "Average Energy" = mean_energy)
songs_table <- rename(songs_table, "Average Loudness" = mean_loudness)
songs_table <- rename(songs_table, "Average Acousticness" = mean_acousticness)
songs_table <- rename(songs_table, "Average Tempo" = mean_tempo)
songs_table <- rename(songs_table, "Popularity Rating" = mean_popularity)
return(songs_table)
}
View(get_table_info(songs_df))
get_table_info <- function(df) {
songs_table <- songs_df %>%
group_by(genre) %>%
summarize(mean_danceability = round(mean(danceability), 2),
mean_energy = round(mean(energy), 2),
mean_loudness = round(mean(loudness), 2),
mean_acousticness = round(mean(acousticness), 2),
mean_tempo = round(mean(tempo), 2),
mean_popularity = round(mean(popularity),2)) %>%
arrange(-mean_popularity)
songs_table <- rename(songs_table, "Genre" = genre)
songs_table <- rename(songs_table, "Average Danceability" = mean_danceability)
songs_table <- rename(songs_table, "Average Energy" = mean_energy)
songs_table <- rename(songs_table, "Average Loudness" = mean_loudness)
songs_table <- rename(songs_table, "Average Acousticness" = mean_acousticness)
songs_table <- rename(songs_table, "Average Tempo" = mean_tempo)
songs_table <- rename(songs_table, "Popularity Rating" = mean_popularity)
return(songs_table)
}
View(get_table_info(songs_df))
popular <- songs_df %>%
group_by(genre) %>%
summarize(popularity = round(mean(popularity), 2)) %>%
arrange(-popularity) %>%
head(1) %>%
mutate(genre = sub("(.)", "\\U\\1", genre, perl=TRUE)) %>%
pull(genre)
source("api_keys.R")
setwd("C:/Users/Ally/Desktop/music-tastes-info201a/scripts")
source('C:/Users/Ally/Desktop/music-tastes-info201a/summary_data_frame.R')
source('C:/Users/Ally/Desktop/music-tastes-info201a/table_data_frame.R')
source('C:/Users/Ally/Desktop/music-tastes-info201a/scripts/summary.R')
library("spotifyr")
library("tidyverse")
library("knitr")
library("dplyr")
source("api_keys.R")
source("summary_data_frame.R")
source("summary_data_frame.R")
source("api_keys.R")
source('C:/Users/Ally/Desktop/music-tastes-info201a/scripts/summary.R')
source('C:/Users/Ally/Desktop/music-tastes-info201a/scripts/table.R')
source("summary.R")
source(summary.R)
setwd("C:/Users/Ally/Desktop/music-tastes-info201a")
source("summary.R")
setwd("C:/Users/Ally/Desktop/music-tastes-info201a/scripts")
setwd("C:/Users/Ally/Desktop/music-tastes-info201a/scripts")
source("summary.R")
setwd("C:/Users/Ally/Desktop/music-tastes-info201a/scripts")
source("summary.R")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(spotifyr)
source("summary.R")
source('C:/Users/Ally/Desktop/music-tastes-info201a/scripts/summary.R')
source("summary.R")
setwd("C:/Users/Ally/Desktop/music-tastes-info201a")
