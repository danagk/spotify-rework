# This is my first comment (today)
install.packages(carData)
install.packages("carData")
library(carData)
View(Florida)
Florida[Florida$GORE > Florida$BUSH,]
nrow(Florida[,Florida$GORE > Florida$BUSH])
nrow(Florida[,Florida$GORE > Florida$BUSH])
nrow(Florida[Florida$GORE > Florida$BUSH,])
nrow(Florida[GORE > BUSH,])
nrow(Florida[GORE > BUSH,])
Florida[Florida$GORE > Florida$BUSH,]
nrow(Florida[Florida$GORE > Florida$BUSH,])
(Florida[Florida$GORE > Florida$BUSH,])
(Florida$NADER[Florida$GORE > Florida$BUSH,])
NADER[Florida$GORE > Florida$BUSH,]
Florida$NADER[Florida$GORE > Florida$BUSH,]
(Florida[Florida$GORE > Florida$BUSH,])
rownames(Florida$Total[Florida$Total == max(Florida$Total),])
rownames(Florida[Florida$Total == max(Florida$Total),])
rownames(Florida[Florida$Total == min(Florida$Total),])
rownames(Florida[Florida$Total = max(Florida$Total),])
Florida[Florida$GORE > Florida$BUSH, NADER]
Florida[Florida$GORE > Florida$BUSH, "NADER"]
sum(Florida[Florida$GORE > Florida$BUSH, "NADER"])
View(Florida[Florida$GORE > Florida$BUSH, "NADER"])
View(Florida[Florida$GORE > Florida$BUSH,])
library("dplyr")
library("ggmap")
library("ggplot2")
# Load data from GitHub
permit_data <- read.csv(
"https://raw.githubusercontent.com/programming-for-data-science/in-action/master/interactive-vis/data/Building_Permits.csv",
stringsAsFactors = F)
library("dplyr")
library("ggmap")
library("ggplot2")
# Load data from GitHub
permit_data <- read.csv(
"https://raw.githubusercontent.com/programming-for-data-science/in-action/master/interactive-vis/data/Building_Permits.csv",
stringsAsFactors = F)
library("dplyr")
library("ggmap")
library("ggplot2")
install.packages("ggmap")
library("dplyr")
library("ggmap")
library("ggplot2")
permit_data <- read.csv(
"https://raw.githubusercontent.com/programming-for-data-science/in-action/master/interactive-vis/data/Building_Permits.csv",
stringsAsFactors = F)
library(httr)
library(jsonlite)
api_call <- "https://api.propublica.org/congress/v1/{congress}/{chamber}/bills/{type}.json"
resource <-"bills"
endpoint <- paste0(api_call, "115", "/house/", resource, "/introduced.json")
response <- GET(endpoint, add_headers("X-API-KEY" = "ZyrCa0uJtBPmjDeWfW8otsjG23Jm532Pt5MvxFHq"))
body <- content(response, "text")
results <- fromJSON(body)
songs_df <- read.csv("data/SpotifyFeatures.csv", stringsAsFactors = FALSE)
songs_df <- rename(songs_df, "genre" = ï..genre)
songs_df <- songs_df %>%
filter(genre != "A Capella" & genre != "Comedy" &
genre != "Movie" & genre != "Soundtrack")
# Set up and source
library(tidyverse)
library(dplyr)
setwd("C:/Users/Ally/Desktop/music-tastes-info201a/scripts")
setwd("C:/Users/Ally/Desktop/music-tastes-info201a")
songs_df <- read.csv("data/SpotifyFeatures.csv", stringsAsFactors = FALSE)
songs_df <- rename(songs_df, "genre" = ï..genre)
songs_df <- songs_df %>%
filter(genre != "A Capella" & genre != "Comedy" &
genre != "Movie" & genre != "Soundtrack")
get_table_info <- function(df) {
songs_table <- df %>%
group_by(genre) %>%
summarize(mean_danceability = round(mean(danceability), 2),
mean_energy = round(mean(energy), 2),
mean_valence = round(mean(valence), 2),
mean_acousticness = round(mean(acousticness), 2),
mean_tempo = round(mean(tempo), 2),
mean_popularity = round(mean(popularity), 0)) %>%
arrange(-mean_popularity)
songs_table <- rename(songs_table, "Genre" = genre)
songs_table <- rename(songs_table, "Average Danceability" = mean_danceability)
songs_table <- rename(songs_table, "Average Energy" = mean_energy)
songs_table <- rename(songs_table, "Average Valence" = mean_valence)
songs_table <- rename(songs_table, "Average Acousticness" = mean_acousticness)
songs_table <- rename(songs_table, "Average Tempo" = mean_tempo)
songs_table <- rename(songs_table, "Popularity Rating" = mean_popularity)
return(songs_table)
}
View(get_table_info(songs_df))
dance <- songs_df %>%
group_by(genre) %>%
summarize(danceability = round(mean(danceability), 2)) %>%
arrange(-danceability) %>%
head(1) %>%
pull(genre)
popular <- songs_df %>%
group_by(genre) %>%
summarize(popularity = round(mean(popularity), 0)) %>%
arrange(-popularity) %>%
head(1) %>%
pull(genre)
popular <- songs_df %>%
group_by(genre) %>%
summarize(popularity = round(mean(popularity), 0)) %>%
arrange(-popularity) %>%
head(1) %>%
pull(genre)
tempo <- songs_df %>%
group_by(genre) %>%
summarize(tempo = round(mean(tempo), 2)) %>%
arrange(-tempo) %>%
head(1) %>%
pull(genre)
valence <- songs_df %>%
group_by(genre) %>%
summarize(valence = round(mean(valence), 2)) %>%
arrange(-valence) %>%
head(1) %>%
pull(genre)
energy <- songs_df %>%
group_by(genre) %>%
summarize(energy = round(mean(energy), 2)) %>%
arrange(-energy) %>%
head(1) %>%
pull(genre)
acoustic <- songs_df %>%
group_by(genre) %>%
summarize(acousticness = round(mean(acousticness), 2)) %>%
arrange(-acousticness) %>%
head(1) %>%
pull(genre)
source("scripts/table.R")
View(songs_df)
opera_acoustic <- songs_df %>%
group_by(genre) %>%
summarize(acousticness = round(mean(acousticness), 2)) %>%
filter(genre == "Opera")
View(opera_acoustic)
View(opera_acoustic)
opera_acoustic <- songs_df %>%
group_by(genre) %>%
summarize(acousticness = round(mean(acousticness), 2)) %>%
filter(genre == "Opera") %>%
pull(acousticness)
opera_acoustic
classical_acoustic <- songs_df %>%
group_by(genre) %>%
summarize(acousticness = round(mean(acousticness), 2)) %>%
filter(genre == "Classical") %>%
pull(acousticness)
reggaeton_dance <- songs_df %>%
group_by(genre) %>%
summarize(danceability = round(mean(danceability), 2)) %>%
filter(genre == "Reggaeton")
View(reggaeton_dance)
reggaeton_dance <- songs_df %>%
group_by(genre) %>%
summarize(danceability = round(mean(danceability), 2)) %>%
filter(genre == "Reggaeton") %>%
pull(danceability)
reggae_dance <- songs_df %>%
group_by(genre) %>%
summarize(danceability = round(mean(danceability), 2)) %>%
filter(genre == "Reggae") %>%
pull(danceability)
opera_acoustic <- songs_df %>%
group_by(genre) %>%
summarize(acousticness = round(mean(acousticness), 2)) %>%
filter(genre == "Opera") %>%
pull(acousticness)
classical_acoustic <- songs_df %>%
group_by(genre) %>%
summarize(acousticness = round(mean(acousticness), 2)) %>%
filter(genre == "Classical") %>%
pull(acousticness)
reggaeton_dance <- songs_df %>%
group_by(genre) %>%
summarize(danceability = round(mean(danceability), 2)) %>%
filter(genre == "Reggaeton") %>%
pull(danceability)
reggae_dance <- songs_df %>%
group_by(genre) %>%
summarize(danceability = round(mean(danceability), 2)) %>%
filter(genre == "Reggae") %>%
pull(danceability)
